// Code generated by MockGen. DO NOT EDIT.
// Source: ./main.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCMD is a mock of CMD interface
type MockCMD struct {
	ctrl     *gomock.Controller
	recorder *MockCMDMockRecorder
}

// MockCMDMockRecorder is the mock recorder for MockCMD
type MockCMDMockRecorder struct {
	mock *MockCMD
}

// NewMockCMD creates a new mock instance
func NewMockCMD(ctrl *gomock.Controller) *MockCMD {
	mock := &MockCMD{ctrl: ctrl}
	mock.recorder = &MockCMDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCMD) EXPECT() *MockCMDMockRecorder {
	return m.recorder
}

// CombinedOutput mocks base method
func (m *MockCMD) CombinedOutput() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CombinedOutput")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CombinedOutput indicates an expected call of CombinedOutput
func (mr *MockCMDMockRecorder) CombinedOutput() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CombinedOutput", reflect.TypeOf((*MockCMD)(nil).CombinedOutput))
}
